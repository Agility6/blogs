name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # 指定触发分支

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # 👇 Build steps
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: npm
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      # 👆 Build steps
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # 👇 Specify build output path
          path: build
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      # 👇 Notification steps
      - name: Check blog posts changes
        id: check_blogs
        run: |
          ADDED_BLOGS=$(git diff --diff-filter=A --name-only HEAD^ | grep '^blog/.*\.md$' || true)
          UPDATED_BLOGS=$(git diff --diff-filter=M --name-only HEAD^ | grep '^blog/.*\.md$' || true)
          REMOVED_BLOGS=$(git diff --diff-filter=D --name-only HEAD^ | grep '^blog/.*\.md$' || true)

          if [ -n "$ADDED_BLOGS"]; then
            echo "New blog posts added: $ADDED_BLOGS"
          fi

          if [ -n "$UPDATED_BLOGS"]; then
            echo "Blog posts updated: $UPDATED_BLOGS"
          fi

          if [ -n "$REMOVED_BLOGS"]; then
            echo "Blog posts removed: $REMOVED_BLOGS"
          fi

          echo "added_blogs=$ADDED_BLOGS" >> $GITHUB_ENV
          echo "updated_blogs=$UPDATED_BLOGS" >> $GITHUB_ENV
          echo "removed_blogs=$REMOVED_BLOGS" >> $GITHUB_ENV

          if [ -n "$ADDED_BLOGS" ] || [ -n "$UPDATED_BLOGS" ] || [ -n "$REMOVED_BLOGS" ]; then
            echo "blogs_changed=true" >> $GITHUB_ENV
          else
            echo "blogs_changed=false" >> $GITHUB_ENV
          fi
      - name: Send WeChat notification
        id: send_wechat
        if: env.blogs_changed == 'true'
        env:
          WECHAT_WEBHOOK: ${{ secrets.WECHAT_WEBHOOK }}
          ADDED_BLOGS: ${{ env.added_blogs }}
          UPDATED_BLOGS: ${{ env.updated_blogs }}
          REMOVED_BLOGS: ${{ env.removed_blogs }}
        run: |
          if [ -n "$ADDED_BLOGS" ]; then
            ADDED_LIST=$(echo "$ADDED_BLOGS" | sed 's/^/- /')
          else
            ADDED_LIST="无新增博客"
          fi

          if [ -n "$UPDATED_BLOGS" ]; then
            UPDATED_LIST=$(echo "$UPDATED_BLOGS" | sed 's/^/- /')
          else
            UPDATED_LIST="无更新博客"
          fi

          if [ -n "$REMOVED_BLOGS" ]; then
            REMOVED_LIST=$(echo "$REMOVED_BLOGS" | sed 's/^/- /')
          else
            REMOVED_LIST="无删除博客"
          fi

          MESSAGE=$(cat <<EOF
          {
            "msgtype": "markdown",
            "markdown": {
              "content": "**📢 博客变更通知**\n> 仓库: [${{ github.repository }}](${{ github.server_url }}/${{ github.repository }})\n> 分支: \`${{ github.ref_name }}\`\n> 提交信息: ${{ github.event.head_commit.message }}\n> 执行者: ${{ github.actor }}\n\n**新增博客文章**:\n${ADDED_LIST}\n\n**更新博客文章**:\n${UPDATED_LIST}\n\n查看构建详情: [Actions Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
            }
          }
          EOF
          )

          curl -X POST -H "Content-Type: application/json" -d "$MESSAGE" $WECHAT_WEBHOOK

